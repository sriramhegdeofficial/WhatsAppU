{"version":3,"file":"static/webpack/static\\development\\pages\\login.js.2f0e091463c741388d78.hot-update.js","sources":["webpack:///./components/LoginBox.js"],"sourcesContent":["\r\n\r\nimport GInput from './GInput';\r\nim\r\n\r\n\r\nconst LoginBox = (props) => {\r\n\r\n    \r\n    const authButtonText = () => {\r\n        if(props.loginButton.isSelected === true) {\r\n            return `login`;\r\n        }else {\r\n            return `signup`;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"container\">\r\n                <div className=\"heading-wrapper\">\r\n                    <div onClick={() => props.handleLoginSignupButtonClick('login')}>\r\n                        <h2 className=\"login\">Login</h2>\r\n                    </div>\r\n                    <div onClick={() => props.handleLoginSignupButtonClick('signup')}>\r\n                        <h2 className=\"signup\">signup</h2>\r\n                    </div>\r\n                   \r\n                </div>\r\n                \r\n               \r\n                 <form>\r\n                    \r\n                    <GInput lIsSelected={props.loginButton.isSelected} />\r\n                     \r\n                     <input type=\"text\" placeholder= {props.loginButton.isSelected ? \"Enter email or username\" : \"Enter username\"} />\r\n                     \r\n                     <input type=\"password\" placeholder=\"password\" />\r\n                     \r\n                 </form>\r\n                 <a href=\"\" className=\"forgot-password\">forgot password?</a>\r\n                <button>\r\n                    {authButtonText()}\r\n                </button>\r\n\r\n            <style jsx>\r\n                {\r\n                    `\r\n                  \r\n                    .container {\r\n                        background: var(--neomorphic-white);\r\n                        width: 350px;\r\n                        height: 550px;\r\n                        box-shadow: 0px 0px 25px 5px rgba(0,0,0,0.2);\r\n                        padding: 30px 10px;\r\n                        border-radius: 10px;\r\n                        display: flex;\r\n                        flex-direction: column;\r\n                        align-items: center;\r\n                        box-shadow: var(--neomorphic-box-shadow);\r\n                        position: relative;\r\n                        \r\n                    }\r\n\r\n                    .heading-wrapper {\r\n                        width: 70%;\r\n                        border-radius: 50px;\r\n                        \r\n                        display: flex;\r\n                        justify-content: center;\r\n                        align-items : center;\r\n                        overflow: hidden;\r\n                        height: 45px;\r\n                        margin-bottom: 20%;\r\n                        box-shadow: var(--neomorphic-box-shadow);\r\n                        background: var(--neomorphic-white);\r\n                    }\r\n\r\n                    .heading-wrapper div {\r\n                        width: 50%;\r\n                        box-shadow: var(--neomorphic-box-shadow);\r\n                        background: var(--neomorphic-white);\r\n                        display: flex;\r\n                        justify-content: center;\r\n                        align-items : center;\r\n                        height: 100%;\r\n                        cursor: pointer;\r\n                    }\r\n\r\n                   \r\n\r\n                    .container .heading-wrapper div h2 {\r\n                        font-weight: 900;\r\n                        text-transform: uppercase;\r\n                        font-size: 1rem;\r\n                        text-align: center;\r\n                        text-shadow: var(--neomorphic-text-shadow);\r\n                        \r\n                    }\r\n\r\n                    .signup {\r\n                       \r\n                      color: ${!props.loginButton.isSelected ? `black` : `rgba(0,0,0,0.3)`};\r\n                      transition: color 0.7s linear;\r\n\r\n                    }\r\n\r\n                    .login {\r\n                        color:  ${props.loginButton.isSelected ? `black` : `rgba(0,0,0,0.3)`};\r\n                        transition: color 0.5s linear;\r\n\r\n                    }\r\n\r\n                  \r\n \r\n                    .container button {\r\n                        width: 70%;\r\n                        height: 40px;\r\n                        text-transform: uppercase;\r\n                        border: none;\r\n                        outline: none;\r\n                        cursor: pointer;\r\n                        font-size: 0.7rem;\r\n                        font-weight: 900;\r\n                        box-shadow: var(--neomorphic-box-shadow);\r\n                        background: var(--neomorphic-white);\r\n                        color: black;\r\n                        border-radius: 50px;\r\n                        transition: all 0.27s linear;\r\n                        position: absolute;\r\n                        bottom: 15%;\r\n                        left: 50%;\r\n                        transform: translateX(-50%);\r\n                    }\r\n                    \r\n                    .container button:hover {\r\n                        box-shadow: var(--hover-neomorphic-box-shadow);\r\n                    }\r\n\r\n                    form {\r\n                        width: 100%;\r\n                        display: flex;\r\n                        align-items : center;\r\n                        flex-direction: column;\r\n                    }\r\n\r\n                    form input {\r\n                        width: 80%;\r\n                        min-width: 200px;\r\n                        height: 40px;\r\n                        border: none;\r\n                        outline: 0;\r\n                        border-radius: 50px;\r\n                        font-size: 0.8rem;\r\n                        padding: 0px 25px;\r\n                        background-color: var(--neomorphic-white);\r\n                        box-shadow:  var(--input-neomorphic-box-shadow);\r\n                        margin: 17px 0;\r\n                        font-weight: 900;\r\n                         \r\n                    }\r\n\r\n\r\n                    form input:focus {\r\n                        box-shadow:  var(--input-focus-neomorphic-box-shadow);\r\n                        text-shadow: 1px 1px 0 #FFF;\r\n                    }\r\n\r\n                    form input::placeholder {\r\n                        font-size: 0.8rem;\r\n                        font-family: 'Nunito Sans', sans-serif;\r\n                        font-weight: 400;\r\n                    }\r\n\r\n                   \r\n\r\n                   a.forgot-password {\r\n                       font-size: 0.9rem;\r\n                       position: absolute;\r\n                       right: 15%;\r\n                       top: 67%;\r\n                       color: rgba(0,0,0,0.3);\r\n                       text-decoration: none;\r\n                       font-style: italic;\r\n                       text-shadow: 1px 1px 0 #FFF;\r\n                       font-weight: 900;\r\n                       transition: all 0.27s linear; \r\n                   }\r\n\r\n                   a.forgot-password:hover {\r\n                       color: black;\r\n                   }\r\n\r\n                    @media only screen and (max-width: 500px) {\r\n                       \r\n                        .container { \r\n                            width: 96%;\r\n                            \r\n                        }\r\n                      }\r\n                    \r\n                    `\r\n                }\r\n            </style>\r\n        </div>\r\n    )\r\n            \r\n}\r\n\r\nexport default LoginBox;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAtBA;AAAA;AAAA;AAAA;AA4LA;AACA;AACA;;;;A","sourceRoot":""}