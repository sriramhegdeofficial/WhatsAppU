{"version":3,"file":"static\\development\\pages\\login.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/GInput.js","webpack:///./components/Layout.js","webpack:///./components/LoginBox.js","webpack:///./pages/login.js","webpack:///external \"gsap\"","webpack:///external \"react\"","webpack:///external \"react-transition-group\"","webpack:///external \"styled-jsx/style\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","\r\nimport gsap from 'gsap';\r\nimport { Transition } from 'react-transition-group';\r\n\r\nclass GInput extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n      \r\n       \r\n            this.myElement = null;\r\n    }\r\n\r\n        \r\n  \r\n   render() {\r\n       return(\r\n           <React.Fragment>\r\n               <Transition \r\n               mountOnEnter\r\n               unmountOnExit\r\n               in={!this.props.lIsSelected} \r\n               timeout={700}\r\n               addEndListener = {\r\n                   (node, done) => {\r\n                    if(this.props.lIsSelected) {\r\n                        gsap.to(node, 0.7, {scaleY: 0, opacity: 0, onComplete: done})\r\n                    }else {\r\n                        gsap.from(node, 0.7, {scaleY: 0, opacity: 0, onComplete: done})\r\n                    }\r\n               }\r\n               \r\n            }\r\n\r\n               >\r\n                    <input ref={input => this.myElement = input}   type=\"text\" placeholder=\"Enter email address\"/>\r\n               </Transition>\r\n             <style jsx>\r\n                 {\r\n                     `\r\n                     input {\r\n                        width: 80%;\r\n                        min-width: 200px;\r\n                        height: 40px;\r\n                        border: none;\r\n                        outline: 0;\r\n                        border-radius: 50px;\r\n                        font-size: 0.8rem;\r\n                        padding: 0px 25px;\r\n                        background-color: var(--neomorphic-white);\r\n                        box-shadow:  var(--input-neomorphic-box-shadow);\r\n                        margin: 17px 0;\r\n                        font-weight: 900;\r\n                         \r\n                    }\r\n\r\n                    input:focus {\r\n                        box-shadow:  var(--input-focus-neomorphic-box-shadow);\r\n                        text-shadow: 1px 1px 0 #FFF;\r\n                    }\r\n\r\n                    input::placeholder {\r\n                        font-size: 0.8rem;\r\n                        font-family: 'Nunito Sans', sans-serif;\r\n                        font-weight: 400;\r\n                    }\r\n                     `\r\n                 }\r\n             </style>\r\n        </React.Fragment>\r\n       );\r\n   }\r\n}\r\n\r\n\r\nexport default GInput;","\r\n\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            {props.children}\r\n            <style global jsx>\r\n                {\r\n                    `\r\n                     @import url('https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@200;400;900&display=swap');\r\n\r\n                 * {\r\n                     box-sizing: border-box;\r\n                     margin: 0;\r\n                     padding: 0;\r\n\r\n                 }\r\n\r\n                 html, body {\r\n                     width: 100%;\r\n                     height: 100%;\r\n                 }\r\n\r\n                 :root {\r\n                     --main-green-color: #25D366;\r\n                     --side-green-color: #5BD9AB;\r\n                     --neomorphic-white: #e8e8e8;\r\n                     --neomorphic-box-shadow: 7px 7px 15px #bbcfda, -4px -4px 13px #ffffff, \r\n                     inset 4px 4px 8px rgba(209, 217, 230, 0.35), \r\n                     inset -8px -8px 8px rgba(255, 255, 255, 0.3);\r\n                     --hover-neomorphic-box-shadow: 4px 2px 18px #bbcfda, \r\n                     -4px -4px 13px #ffffff, \r\n                     inset 6px 6px 16px rgba(209, 217, 230, 0.8), \r\n                     inset -8px -8px 8px rgba(255, 255, 255, 0.2);\r\n                     --input-neomorphic-box-shadow: inset 1px 1px 2px #BABECC, \r\n                     inset -1px -1px 2px white;\r\n                    \r\n\r\n                     --input-focus-neomorphic-box-shadow: inset 2px 2px 5px #BABECC, \r\n                     inset -5px -5px 10px var(--neomorphic-white);\r\n                     --neomorphic-text-shadow:  1px 1px 0 #fff;\r\n                 }\r\n                \r\n                   body {\r\n                    font-family: 'Nunito Sans', sans-serif;\r\n                   }\r\n                 \r\n                \r\n                 #__next {\r\n                     width: 100%;\r\n                     height: 100%;\r\n                 }\r\n                    \r\n                    `\r\n                }\r\n            </style>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Layout;","\r\n\r\nimport GInput from './GInput';\r\n\r\n\r\n\r\nconst LoginBox = (props) => {\r\n\r\n    \r\n    const authButtonText = () => {\r\n        if(props.loginButton.isSelected === true) {\r\n            return `login`;\r\n        }else {\r\n            return `signup`;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"container\">\r\n                <div className=\"heading-wrapper\">\r\n                    <div onClick={() => props.handleLoginSignupButtonClick('login')}>\r\n                        <h2 className=\"login\">Login</h2>\r\n                    </div>\r\n                    <div onClick={() => props.handleLoginSignupButtonClick('signup')}>\r\n                        <h2 className=\"signup\">signup</h2>\r\n                    </div>\r\n                   \r\n                </div>\r\n                \r\n               \r\n                 <form>\r\n                    \r\n                    <GInput lIsSelected={props.loginButton.isSelected} />\r\n                     \r\n                     <input type=\"text\" placeholder= {props.loginButton.isSelected ? \"Enter email or username\" : \"Enter username\"} />\r\n                     \r\n                     <input type=\"password\" placeholder=\"password\" />\r\n                     \r\n                 </form>\r\n                 <a href=\"\" className=\"forgot-password\">forgot password?</a>\r\n                <button>\r\n                    {authButtonText()}\r\n                </button>\r\n\r\n            <style jsx>\r\n                {\r\n                    `\r\n                  \r\n                    .container {\r\n                        background: var(--neomorphic-white);\r\n                        width: 350px;\r\n                        height: 550px;\r\n                        box-shadow: 0px 0px 25px 5px rgba(0,0,0,0.2);\r\n                        padding: 30px 10px;\r\n                        border-radius: 10px;\r\n                        display: flex;\r\n                        flex-direction: column;\r\n                        align-items: center;\r\n                        box-shadow: var(--neomorphic-box-shadow);\r\n                        position: relative;\r\n                        \r\n                    }\r\n\r\n                    .heading-wrapper {\r\n                        width: 70%;\r\n                        border-radius: 50px;\r\n                        \r\n                        display: flex;\r\n                        justify-content: center;\r\n                        align-items : center;\r\n                        overflow: hidden;\r\n                        height: 45px;\r\n                        margin-bottom: 20%;\r\n                        box-shadow: var(--neomorphic-box-shadow);\r\n                        background: var(--neomorphic-white);\r\n                    }\r\n\r\n                    .heading-wrapper div {\r\n                        width: 50%;\r\n                        box-shadow: var(--neomorphic-box-shadow);\r\n                        background: var(--neomorphic-white);\r\n                        display: flex;\r\n                        justify-content: center;\r\n                        align-items : center;\r\n                        height: 100%;\r\n                        cursor: pointer;\r\n                    }\r\n\r\n                   \r\n\r\n                    .container .heading-wrapper div h2 {\r\n                        font-weight: 900;\r\n                        text-transform: uppercase;\r\n                        font-size: 1rem;\r\n                        text-align: center;\r\n                        text-shadow: var(--neomorphic-text-shadow);\r\n                        \r\n                    }\r\n\r\n                    .signup {\r\n                       \r\n                      color: ${!props.loginButton.isSelected ? `black` : `rgba(0,0,0,0.3)`};\r\n                      transition: color 0.7s linear;\r\n\r\n                    }\r\n\r\n                    .login {\r\n                        color:  ${props.loginButton.isSelected ? `black` : `rgba(0,0,0,0.3)`};\r\n                        transition: color 0.5s linear;\r\n\r\n                    }\r\n\r\n                  \r\n \r\n                    .container button {\r\n                        width: 70%;\r\n                        height: 40px;\r\n                        text-transform: uppercase;\r\n                        border: none;\r\n                        outline: none;\r\n                        cursor: pointer;\r\n                        font-size: 0.7rem;\r\n                        font-weight: 900;\r\n                        box-shadow: var(--neomorphic-box-shadow);\r\n                        background: var(--neomorphic-white);\r\n                        color: black;\r\n                        border-radius: 50px;\r\n                        transition: all 0.27s linear;\r\n                        position: absolute;\r\n                        bottom: 15%;\r\n                        left: 50%;\r\n                        transform: translateX(-50%);\r\n                    }\r\n                    \r\n                    .container button:hover {\r\n                        box-shadow: var(--hover-neomorphic-box-shadow);\r\n                    }\r\n\r\n                    form {\r\n                        width: 100%;\r\n                        display: flex;\r\n                        align-items : center;\r\n                        flex-direction: column;\r\n                    }\r\n\r\n                    form input {\r\n                        width: 80%;\r\n                        min-width: 200px;\r\n                        height: 40px;\r\n                        border: none;\r\n                        outline: 0;\r\n                        border-radius: 50px;\r\n                        font-size: 0.8rem;\r\n                        padding: 0px 25px;\r\n                        background-color: var(--neomorphic-white);\r\n                        box-shadow:  var(--input-neomorphic-box-shadow);\r\n                        margin: 17px 0;\r\n                        font-weight: 900;\r\n                         \r\n                    }\r\n\r\n\r\n                    form input:focus {\r\n                        box-shadow:  var(--input-focus-neomorphic-box-shadow);\r\n                        text-shadow: 1px 1px 0 #FFF;\r\n                    }\r\n\r\n                    form input::placeholder {\r\n                        font-size: 0.8rem;\r\n                        font-family: 'Nunito Sans', sans-serif;\r\n                        font-weight: 400;\r\n                    }\r\n\r\n                   \r\n\r\n                   a.forgot-password {\r\n                       font-size: 0.9rem;\r\n                       position: absolute;\r\n                       right: 15%;\r\n                       top: 67%;\r\n                       color: rgba(0,0,0,0.3);\r\n                       text-decoration: none;\r\n                       font-style: italic;\r\n                       text-shadow: 1px 1px 0 #FFF;\r\n                       font-weight: 900;\r\n                       transition: all 0.27s linear; \r\n                   }\r\n\r\n                   a.forgot-password:hover {\r\n                       color: black;\r\n                   }\r\n\r\n                    @media only screen and (max-width: 500px) {\r\n                       \r\n                        .container { \r\n                            width: 96%;\r\n                            \r\n                        }\r\n                      }\r\n                    \r\n                    `\r\n                }\r\n            </style>\r\n        </div>\r\n    )\r\n            \r\n}\r\n\r\nexport default LoginBox;","import Layout from './../components/Layout';\r\nimport LoginBox from './../components/LoginBox';\r\nimport {Component} from 'react';\r\n\r\n\r\nclass Login extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loginButton: {\r\n                isSelected: false\r\n            }\r\n        }\r\n    }\r\n\r\n    handleLoginSignupButtonClick = (value) => {\r\n        if(value === 'login') {\r\n            if(this.state.loginButton.isSelected === true) {\r\n                return;\r\n            }else {\r\n                this.setState(prevState => ({\r\n                    loginButton: {                   // object that we want to update\r\n                        ...prevState.loginButton,    // keep all other key-value pairs\r\n                        isSelected: true       // update the value of specific key\r\n                    }\r\n                }))\r\n            }\r\n        }\r\n            \r\n            else if(value=== 'signup')\r\n            {\r\n                if(this.state.loginButton.isSelected === true) {\r\n                    this.setState(prevState => ({\r\n                        loginButton: {                   // object that we want to update\r\n                            ...prevState.loginButton,    // keep all other key-value pairs\r\n                            isSelected: false      // update the value of specific key\r\n                        }\r\n                    }))\r\n                } else {\r\n                    return\r\n                }\r\n            }\r\n\r\n        \r\n    }\r\n        \r\n\r\n\r\n\r\n    render() {\r\n    return(\r\n        <Layout>\r\n            <div className=\"container\">\r\n                <LoginBox \r\n                loginButton = {this.state.loginButton} \r\n                handleLoginSignupButtonClick = {this.handleLoginSignupButtonClick} />\r\n                <style jsx>\r\n                    {`\r\n\r\n                        .container {\r\n                            width: 100%;\r\n                            height: 100%;\r\n                            display: flex;\r\n                            justify-content: center;\r\n                            align-items: center;\r\n                            background: var(--neomorphic-white);\r\n                        }\r\n\r\n                      \r\n                    \r\n                    `}\r\n                </style>\r\n            </div>\r\n            \r\n        </Layout>\r\n       \r\n    );\r\n                    }\r\n}\r\n\r\nexport default Login;","module.exports = require(\"gsap\");","module.exports = require(\"react\");","module.exports = require(\"react-transition-group\");","module.exports = require(\"styled-jsx/style\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACvFA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBA;AAAA;AAAA;AAsDA;AACA;AApEA;AACA;AAsEA;;;;;;;;;;;;;;;;;;;;;;ACxEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsDA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC3DA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAtBA;AAAA;AAAA;AAAA;;AAAA;AA4LA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrNA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAFA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAHA;AADA;AAMA;AACA;AACA;AACA;AAGA;AACA;AArCA;AACA;AACA;AADA;AADA;AAKA;AACA;AAmCA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAyBA;AACA;AA1EA;AACA;AA2EA;;;;;;;;;;;;;;;;;;;;;;;ACjFA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}