{"ast":null,"code":"var _jsxFileName = \"D:\\\\web projects\\\\Chat App\\\\client\\\\components\\\\GInput.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport gsap from 'gsap';\nimport { Transition } from 'react-transition-group';\n\nclass GInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.myElement = null;\n  }\n\n  componentDidMount() {\n    gsap.from(this.myElement, 0.7, {\n      scaleY: 0,\n      opacity: 1\n    });\n  }\n\n  render() {\n    return __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 12\n      }\n    }, __jsx(Transition, {\n      mountOnEnter: true,\n      unmountOnExit: true,\n      in: this.props.lIsSelected,\n      timeout: 700,\n      addEndListener: (node, done) => {\n        if (!this.props.lIsSelected) {\n          gsap.to(node, 0.7, {\n            scaleY: 0,\n            opacity: 0,\n            onComplete: done\n          });\n        } else {\n          gsap.from(node, 0.7, {\n            scaleY: 0,\n            opacity: 0,\n            onComplete: done\n          });\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 16\n      }\n    }, __jsx(\"input\", {\n      ref: input => this.myElement = input,\n      type: \"text\",\n      placeholder: \"Enter email address\",\n      className: \"jsx-2390958154\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    })), __jsx(_JSXStyle, {\n      id: \"2390958154\",\n      __self: this\n    }, \"input.jsx-2390958154{width:80%;min-width:200px;height:40px;border:none;outline:0;border-radius:50px;font-size:0.8rem;padding:0px 25px;background-color:var(--neomorphic-white);box-shadow:var(--input-neomorphic-box-shadow);margin:17px 0;font-weight:900;}input.jsx-2390958154:focus{box-shadow:var(--input-focus-neomorphic-box-shadow);text-shadow:1px 1px 0 #FFF;}input.jsx-2390958154::-webkit-input-placeholder{font-size:0.8rem;font-family:'Nunito Sans',sans-serif;font-weight:400;}input.jsx-2390958154::-moz-placeholder{font-size:0.8rem;font-family:'Nunito Sans',sans-serif;font-weight:400;}input.jsx-2390958154:-ms-input-placeholder{font-size:0.8rem;font-family:'Nunito Sans',sans-serif;font-weight:400;}input.jsx-2390958154::placeholder{font-size:0.8rem;font-family:'Nunito Sans',sans-serif;font-weight:400;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkQ6XFx3ZWIgcHJvamVjdHNcXENoYXQgQXBwXFxjbGllbnRcXGNvbXBvbmVudHNcXEdJbnB1dC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5Q3FCLEFBR21DLEFBZ0IyQyxBQUtwQyxVQXBCRCxPQXFCc0IsU0FwQjFCLFlBQ0EsWUFDRixFQWFpQixFQU1YLE1BbEJHLFVBbUJ2QixTQWxCcUIsQUFZckIsaUJBWHFCLGlCQUN3Qix5Q0FDTSw4Q0FDakMsY0FDRSxnQkFFcEIiLCJmaWxlIjoiRDpcXHdlYiBwcm9qZWN0c1xcQ2hhdCBBcHBcXGNsaWVudFxcY29tcG9uZW50c1xcR0lucHV0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCBnc2FwIGZyb20gJ2dzYXAnO1xyXG5pbXBvcnQgeyBUcmFuc2l0aW9uIH0gZnJvbSAncmVhY3QtdHJhbnNpdGlvbi1ncm91cCc7XHJcblxyXG5jbGFzcyBHSW5wdXQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XHJcbiAgICAgICAgc3VwZXIocHJvcHMpO1xyXG4gICAgICBcclxuICAgICAgIFxyXG4gICAgICAgICAgICB0aGlzLm15RWxlbWVudCA9IG51bGw7XHJcbiAgICB9XHJcblxyXG4gICBjb21wb25lbnREaWRNb3VudCgpIHtcclxuICAgICAgICBnc2FwLmZyb20odGhpcy5teUVsZW1lbnQsIDAuNywge3NjYWxlWTogMCxvcGFjaXR5OiAxfSlcclxuICAgfVxyXG4gIFxyXG4gICByZW5kZXIoKSB7XHJcbiAgICAgICByZXR1cm4oXHJcbiAgICAgICAgICAgPFJlYWN0LkZyYWdtZW50PlxyXG4gICAgICAgICAgICAgICA8VHJhbnNpdGlvbiBcclxuICAgICAgICAgICAgICAgbW91bnRPbkVudGVyXHJcbiAgICAgICAgICAgICAgIHVubW91bnRPbkV4aXRcclxuICAgICAgICAgICAgICAgaW49e3RoaXMucHJvcHMubElzU2VsZWN0ZWR9IFxyXG4gICAgICAgICAgICAgICB0aW1lb3V0PXs3MDB9XHJcbiAgICAgICAgICAgICAgIGFkZEVuZExpc3RlbmVyID0ge1xyXG4gICAgICAgICAgICAgICAgICAgKG5vZGUsIGRvbmUpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICBpZighdGhpcy5wcm9wcy5sSXNTZWxlY3RlZCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBnc2FwLnRvKG5vZGUsIDAuNywge3NjYWxlWTogMCxvcGFjaXR5OiAwLCBvbkNvbXBsZXRlOiBkb25lfSlcclxuICAgICAgICAgICAgICAgICAgICAgICB9ZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGdzYXAuZnJvbShub2RlLCAwLjcsIHtzY2FsZVk6IDAsb3BhY2l0eTogMCwgb25Db21wbGV0ZTogZG9uZX0pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgID5cclxuICAgICAgICAgICAgICAgICAgICA8aW5wdXQgcmVmPXtpbnB1dCA9PiB0aGlzLm15RWxlbWVudCA9IGlucHV0fSAgIHR5cGU9XCJ0ZXh0XCIgcGxhY2Vob2xkZXI9XCJFbnRlciBlbWFpbCBhZGRyZXNzXCIvPlxyXG4gICAgICAgICAgICAgICA8L1RyYW5zaXRpb24+XHJcbiAgICAgICAgICAgICA8c3R5bGUganN4PlxyXG4gICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgYFxyXG4gICAgICAgICAgICAgICAgICAgICBpbnB1dCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1pbi13aWR0aDogMjAwcHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogNDBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBvdXRsaW5lOiAwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiA1MHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDAuOHJlbTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMHB4IDI1cHg7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLW5lb21vcnBoaWMtd2hpdGUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBib3gtc2hhZG93OiAgdmFyKC0taW5wdXQtbmVvbW9ycGhpYy1ib3gtc2hhZG93KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAxN3B4IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA5MDA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGlucHV0OmZvY3VzIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYm94LXNoYWRvdzogIHZhcigtLWlucHV0LWZvY3VzLW5lb21vcnBoaWMtYm94LXNoYWRvdyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHQtc2hhZG93OiAxcHggMXB4IDAgI0ZGRjtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGlucHV0OjpwbGFjZWhvbGRlciB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMC44cmVtO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmb250LWZhbWlseTogJ051bml0byBTYW5zJywgc2Fucy1zZXJpZjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgIGBcclxuICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICA8L3N0eWxlPlxyXG4gICAgICAgIDwvUmVhY3QuRnJhZ21lbnQ+XHJcbiAgICAgICApO1xyXG4gICB9XHJcbn1cclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCBHSW5wdXQ7Il19 */\\n/*@ sourceURL=D:\\\\\\\\web projects\\\\\\\\Chat App\\\\\\\\client\\\\\\\\components\\\\\\\\GInput.js */\"));\n  }\n\n}\n\nexport default GInput;","map":{"version":3,"sources":["D:/web projects/Chat App/client/components/GInput.js"],"names":["gsap","Transition","GInput","React","Component","constructor","props","myElement","componentDidMount","from","scaleY","opacity","render","lIsSelected","node","done","to","onComplete","input"],"mappings":";;;;AACA,OAAOA,IAAP,MAAiB,MAAjB;AACA,SAASC,UAAT,QAA2B,wBAA3B;;AAEA,MAAMC,MAAN,SAAqBC,KAAK,CAACC,SAA3B,CAAqC;AAEjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAGI,SAAKC,SAAL,GAAiB,IAAjB;AACP;;AAEFC,EAAAA,iBAAiB,GAAG;AACfR,IAAAA,IAAI,CAACS,IAAL,CAAU,KAAKF,SAAf,EAA0B,GAA1B,EAA+B;AAACG,MAAAA,MAAM,EAAE,CAAT;AAAWC,MAAAA,OAAO,EAAE;AAApB,KAA/B;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,UAAD;AACA,MAAA,YAAY,MADZ;AAEA,MAAA,aAAa,MAFb;AAGA,MAAA,EAAE,EAAE,KAAKN,KAAL,CAAWO,WAHf;AAIA,MAAA,OAAO,EAAE,GAJT;AAKA,MAAA,cAAc,EACV,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACZ,YAAG,CAAC,KAAKT,KAAL,CAAWO,WAAf,EAA4B;AAC3Bb,UAAAA,IAAI,CAACgB,EAAL,CAAQF,IAAR,EAAc,GAAd,EAAmB;AAACJ,YAAAA,MAAM,EAAE,CAAT;AAAWC,YAAAA,OAAO,EAAE,CAApB;AAAuBM,YAAAA,UAAU,EAAEF;AAAnC,WAAnB;AACA,SAFD,MAEM;AACLf,UAAAA,IAAI,CAACS,IAAL,CAAUK,IAAV,EAAgB,GAAhB,EAAqB;AAACJ,YAAAA,MAAM,EAAE,CAAT;AAAWC,YAAAA,OAAO,EAAE,CAApB;AAAuBM,YAAAA,UAAU,EAAEF;AAAnC,WAArB;AACA;AAEJ,OAbL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAiBK;AAAO,MAAA,GAAG,EAAEG,KAAK,IAAI,KAAKX,SAAL,GAAiBW,KAAtC;AAA+C,MAAA,IAAI,EAAC,MAApD;AAA2D,MAAA,WAAW,EAAC,qBAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBL,CADJ;AAAA;AAAA;AAAA,iuJADJ;AAuDH;;AArEiC;;AAyErC,eAAehB,MAAf","sourcesContent":["\r\nimport gsap from 'gsap';\r\nimport { Transition } from 'react-transition-group';\r\n\r\nclass GInput extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n      \r\n       \r\n            this.myElement = null;\r\n    }\r\n\r\n   componentDidMount() {\r\n        gsap.from(this.myElement, 0.7, {scaleY: 0,opacity: 1})\r\n   }\r\n  \r\n   render() {\r\n       return(\r\n           <React.Fragment>\r\n               <Transition \r\n               mountOnEnter\r\n               unmountOnExit\r\n               in={this.props.lIsSelected} \r\n               timeout={700}\r\n               addEndListener = {\r\n                   (node, done) => {\r\n                       if(!this.props.lIsSelected) {\r\n                        gsap.to(node, 0.7, {scaleY: 0,opacity: 0, onComplete: done})\r\n                       }else {\r\n                        gsap.from(node, 0.7, {scaleY: 0,opacity: 0, onComplete: done})\r\n                       }\r\n                      \r\n                   }\r\n               }\r\n\r\n               >\r\n                    <input ref={input => this.myElement = input}   type=\"text\" placeholder=\"Enter email address\"/>\r\n               </Transition>\r\n             <style jsx>\r\n                 {\r\n                     `\r\n                     input {\r\n                        width: 80%;\r\n                        min-width: 200px;\r\n                        height: 40px;\r\n                        border: none;\r\n                        outline: 0;\r\n                        border-radius: 50px;\r\n                        font-size: 0.8rem;\r\n                        padding: 0px 25px;\r\n                        background-color: var(--neomorphic-white);\r\n                        box-shadow:  var(--input-neomorphic-box-shadow);\r\n                        margin: 17px 0;\r\n                        font-weight: 900;\r\n                         \r\n                    }\r\n\r\n                    input:focus {\r\n                        box-shadow:  var(--input-focus-neomorphic-box-shadow);\r\n                        text-shadow: 1px 1px 0 #FFF;\r\n                    }\r\n\r\n                    input::placeholder {\r\n                        font-size: 0.8rem;\r\n                        font-family: 'Nunito Sans', sans-serif;\r\n                        font-weight: 400;\r\n                    }\r\n                     `\r\n                 }\r\n             </style>\r\n        </React.Fragment>\r\n       );\r\n   }\r\n}\r\n\r\n\r\nexport default GInput;"]},"metadata":{},"sourceType":"module"}